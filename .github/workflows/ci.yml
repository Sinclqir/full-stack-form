name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        env:
          CODECOV_DEBUG: true

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: ./coverage/
          retention-days: 30

      - name: Display coverage summary
        run: |
          echo "=== Frontend Coverage ==="
          if [ -f "./coverage/lcov.info" ]; then
            echo "Frontend coverage report generated"
            head -20 ./coverage/lcov.info
          else
            echo "No frontend coverage file found"
          fi

  integration:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          cat > .env << EOF
          MYSQL_HOST=mysql-fullstackform.alwaysdata.net
          MYSQL_DATABASE=fullstackform_db
          MYSQL_USER=419975
          MYSQL_PASSWORD=Fullstackform1985&
          MYSQL_ROOT_PASSWORD=Fullstackform1985&
          PORT=8000
          ADMIN_EMAIL=loise.fenoll@ynov.com
          ADMIN_PASSWORD=PvdrTAzTeR247sDnAZBr
          JWT_SECRET_KEY=955aeaac8e7935ebc675c00de118253b84a6143aade62476d40424f25c17d20390e973aeb36aa69472f4e60b497b2e59
          EOF

      - name: Start Docker services
        run: docker compose up -d --build

      - name: Wait for services to be ready
        run: |
          npx wait-on http://localhost:8000
          npx wait-on http://localhost:3000

      - name: Run Cypress E2E tests
        run: npx cypress run
        env:
          CYPRESS_baseUrl: http://localhost:3000

  deploy:
    needs: [test, integration]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
