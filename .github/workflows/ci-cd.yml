name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        env:
          CODECOV_DEBUG: true

      - name: Upload dist & coverage for next jobs
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ./coverage/
            ./dist/
          retention-days: 7

  docker_and_e2e:
    runs-on: ubuntu-latest
    needs: build_test

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file for Docker tests
        run: |
          cat > .env << EOF
          MYSQL_HOST=localhost
          MYSQL_DATABASE=fullstackform_db
          MYSQL_USER=root
          MYSQL_PASSWORD=Fullstackform1985
          MYSQL_ROOT_PASSWORD=Fullstackform1985
          PORT=8000
          ADMIN_EMAIL=loise.fenoll@ynov.com
          ADMIN_PASSWORD=PvdrTAzTeR247sDnAZBr
          JWT_SECRET_KEY=955aeaac8e7935ebc675c00de118253b84a6143aade62476d40424f25c17d20390e973aeb36aa69472f4e60b497b2e59
          VITE_API_URL=http://localhost:8000
          EOF

      - name: Build and start Docker containers
        run: docker compose up -d --build

      - name: Check MySQL health and show logs if needed
        run: |
          echo "Waiting for MySQL to be healthy..."
          timeout 120 bash -c 'until docker inspect --format="{{json .State.Health.Status}}" $(docker compose ps -q mysql) | grep -q "healthy"; do sleep 5; echo "MySQL not ready yet..."; done'
          echo "MySQL is healthy!"
        continue-on-error: false

      - name: Show MySQL logs if unhealthy
        if: failure()
        run: |
          echo "MySQL failed to become healthy. Showing logs:"
          docker compose logs mysql

      - name: Wait for backend
        run: |
          echo "Waiting for backend..."
          timeout 90 bash -c 'until curl -f http://localhost:8000 > /dev/null 2>&1; do sleep 5; echo "Backend not ready yet..."; done'
          echo "Backend is ready!"

      - name: Wait for frontend
        run: |
          echo "Waiting for frontend..."
          timeout 90 bash -c 'until curl -f http://localhost:3000 > /dev/null 2>&1; do sleep 5; echo "Frontend not ready yet..."; done'
          echo "Frontend is ready!"

      - name: Show container status
        run: docker compose ps

      - name: Install dependencies (again for Cypress)
        run: npm ci

      - name: Run Cypress E2E tests
        env:
          CYPRESS_BASE_URL: http://localhost:3000
        run: |
          npx cypress install
          npx cypress run

      - name: Clean up Docker containers
        run: docker compose down

  deploy_vercel:
    runs-on: ubuntu-latest
    needs: [build_test, docker_and_e2e]

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
