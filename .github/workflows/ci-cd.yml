name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        env:
          CODECOV_DEBUG: true

      - name: Upload dist & coverage for next jobs
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ./coverage/
            ./dist/
          retention-days: 7

  docker_and_e2e:
    runs-on: ubuntu-latest
    needs: build_test

    steps:
      - uses: actions/checkout@v4

      - name: Restore .env file from secrets
        run: echo "$ENV_FILE" > .env
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}

      - name: Build and start Docker containers
        run: docker compose up -d --build

      - name: Wait for backend
        run: timeout 90 bash -c 'until curl -f http://localhost:8000 > /dev/null 2>&1; do sleep 2; done'

      - name: Wait for frontend
        run: timeout 90 bash -c 'until curl -f http://localhost:3000 > /dev/null 2>&1; do sleep 2; done'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies (again for Cypress)
        run: npm ci

      - name: Run Cypress E2E tests
        env:
          CYPRESS_BASE_URL: http://localhost:3000
        run: |
          npx cypress install
          npx cypress run

  deploy_vercel:
    runs-on: ubuntu-latest
    needs: [build_test, docker_and_e2e]

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
